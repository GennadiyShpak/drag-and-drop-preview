{"version":3,"sources":["components/ProgressBar/ProgressBar.module.css","components/DropZoneViews/DropZoneViews.module.css","hooks/useFileReader.js","components/Input/Input.js","components/DropZoneViews/DropZoneView.js","img/image.jpg","components/ProgressBar/ProgressBar.js","components/ImagePreview/ImagePreview.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","useFileReader","file","useState","imageSrc","setImageSrc","load","setLoad","total","setTotal","reader","useMemo","FileReader","onloadstart","useEffect","readAsDataURL","onprogress","e","loaded","onloadend","result","Input","setPictureSrc","setLoadBytes","setTotalBytes","setFile","inputImageHandler","type","onChange","target","files","DropZoneViews","hightLight","setHightLight","dropZoneImageHandler","className","s","dropZone","data-mark","onDragEnter","onDragLeave","onDragOver","preventDefault","onDrop","dataset","mark","dataTransfer","ProgressBar","loadBar","totalBytes","loadBytes","Math","trunc","console","log","wrapper","containerStyles","fillerStyles","labelStyles","width","ImagePreview","src","alt","App","image","pictureSrc","DropZoneView","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3fba9945.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"fillerStyles\":\"ProgressBar_fillerStyles__UTVKJ\",\"labelStyles\":\"ProgressBar_labelStyles__2IPLy\",\"containerStyles\":\"ProgressBar_containerStyles__3R0Zo\",\"wrapper\":\"ProgressBar_wrapper__3FZV8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropZone\":\"DropZoneViews_dropZone__2waso\",\"dragged\":\"DropZoneViews_dragged__1NcxE\",\"hightLight\":\"DropZoneViews_hightLight__3ockE\"};","import { useState, useEffect, useMemo } from 'react';\r\n\r\nconst useFileReader = file => {\r\n  const [imageSrc, setImageSrc] = useState(null);\r\n  const [load, setLoad] = useState(1);\r\n  const [total, setTotal] = useState(null);\r\n\r\n  const reader = useMemo(() => {\r\n  return  new FileReader();\r\n  }, []);\r\n\r\n  reader.onloadstart = function () {};\r\n  useEffect(() => {\r\n    if (file) {\r\n      reader.readAsDataURL(file);\r\n    }\r\n  }, [file, reader]);\r\n  reader.onprogress = function (e) {\r\n    const { loaded, total } = e;\r\n    setLoad(loaded);\r\n    setTotal(total);\r\n  };\r\n\r\n  reader.onloadend = function () {\r\n    setImageSrc(reader.result);\r\n  };\r\n\r\n  return { imageSrc, load, total };\r\n};\r\nexport default useFileReader;\r\n","import { useState, useEffect } from 'react';\r\nimport useFileReader from '../../hooks/useFileReader';\r\n\r\nfunction Input({ setPictureSrc, setLoadBytes, setTotalBytes }) {\r\n  const [file, setFile] = useState(null);\r\n  const inputImageHandler = useFileReader(file);\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n    setPictureSrc(inputImageHandler.imageSrc);\r\n  }, [file, inputImageHandler.imageSrc, setPictureSrc]);\r\n\r\n  useEffect(() => {\r\n    setLoadBytes(inputImageHandler.load);\r\n  }, [inputImageHandler.load, setLoadBytes]);\r\n\r\n  useEffect(() => {\r\n    setTotalBytes(inputImageHandler.total);\r\n  }, [inputImageHandler.total, setTotalBytes]);\r\n\r\n  const onChangeHandler = ({ target }) => {\r\n    setFile(target.files[0]);\r\n  };\r\n  return (\r\n    <>\r\n      <input type=\"file\" onChange={onChangeHandler} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","import { useState, useEffect } from 'react';\r\n\r\nimport s from './DropZoneViews.module.css';\r\nimport useFileReader from '../../hooks/useFileReader';\r\n\r\nfunction DropZoneViews({ setPictureSrc, setLoadBytes, setTotalBytes }) {\r\n  const [hightLight, setHightLight] = useState(false);\r\n  const [file, setFile] = useState(null);\r\n  const dropZoneImageHandler = useFileReader(file);\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n    setPictureSrc(dropZoneImageHandler.imageSrc);\r\n  }, [dropZoneImageHandler.imageSrc, file, setPictureSrc]);\r\n\r\n  useEffect(() => {\r\n    setLoadBytes(dropZoneImageHandler.load);\r\n  }, [dropZoneImageHandler.load, setLoadBytes, setTotalBytes]);\r\n\r\n  useEffect(() => {\r\n    setTotalBytes(dropZoneImageHandler.total);\r\n  }, [dropZoneImageHandler.total, setTotalBytes]);\r\n\r\n  function onDragEnterHandler(e) {\r\n    setHightLight(true);\r\n  }\r\n\r\n  function onDragLeaveHandler(e) {\r\n    setHightLight(false);\r\n  }\r\n\r\n  function onDragOverHandler(e) {\r\n    e.preventDefault();\r\n  }\r\n\r\n  function onDropHandler(e) {\r\n    e.preventDefault();\r\n    if (e.target.dataset.mark === 'dropZone') {\r\n      const { files } = e.dataTransfer;\r\n      setFile(files[0]);\r\n      setHightLight(false);\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <div\r\n        className={`${s.dropZone} ${hightLight ? s.hightLight : ''}`}\r\n        data-mark=\"dropZone\"\r\n        onDragEnter={onDragEnterHandler}\r\n        onDragLeave={onDragLeaveHandler}\r\n        onDragOver={onDragOverHandler}\r\n        onDrop={onDropHandler}\r\n      >\r\n        <p>Drop file here</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default DropZoneViews;\r\n","export default __webpack_public_path__ + \"static/media/image.5116d193.jpg\";","import s from './ProgressBar.module.css';\r\n\r\nconst ProgressBar = ({ totalBytes, loadBytes }) => {\r\n  let loadBar;\r\n  totalBytes\r\n    ? (loadBar = Math.trunc((loadBytes / totalBytes) * 100))\r\n    : (loadBar = 0);\r\n  console.log(totalBytes);\r\n  console.log('l', loadBytes);\r\n  return (\r\n    <div className={s.wrapper}>\r\n      <div className={s.containerStyles}>\r\n        <div className={s.fillerStyles}>\r\n          <span\r\n            className={s.labelStyles}\r\n            width={`${loadBar}%`}\r\n          >{`${loadBar}%`}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgressBar;\r\n","import ProgressBar from '../ProgressBar';\r\n\r\nconst ImagePreview = ({ imageSrc, totalBytes, loadBytes }) => {\r\n  return (\r\n    <>\r\n      <div>\r\n        <img src={imageSrc} width=\"300\" alt=\"random img\" />\r\n      </div>\r\n      <div>\r\n        {loadBytes && (\r\n          <ProgressBar totalBytes={totalBytes} loadBytes={loadBytes} />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ImagePreview;\r\n","import './App.css';\r\nimport { useState } from 'react';\r\n\r\nimport Input from './components/Input';\r\nimport DropZoneViews from './components/DropZoneViews';\r\nimport image from './img/image.jpg';\r\nimport ImagePreview from './components/ImagePreview';\r\n\r\nfunction App() {\r\n  const [pictureSrc, setPictureSrc] = useState(image);\r\n  const [totalBytes, setTotalBytes] = useState(null);\r\n  const [loadBytes, setLoadBytes] = useState(null);\r\n  return (\r\n    <div className=\"App\">\r\n      <Input\r\n        setPictureSrc={setPictureSrc}\r\n        setLoadBytes={setLoadBytes}\r\n        setTotalBytes={setTotalBytes}\r\n      />\r\n      <DropZoneViews\r\n        setPictureSrc={setPictureSrc}\r\n        setLoadBytes={setLoadBytes}\r\n        setTotalBytes={setTotalBytes}\r\n      />\r\n      <ImagePreview\r\n        imageSrc={pictureSrc}\r\n        loadBytes={loadBytes}\r\n        totalBytes={totalBytes}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}